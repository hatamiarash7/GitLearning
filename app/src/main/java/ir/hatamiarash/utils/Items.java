package ir.hatamiarash.utils;

public class Items {
	public static String[][] items = {
			{"git config --global user.name [name]", "نام توسعه دهنده پیشفرض برای تمام مخازن"},
			{"git config --global user.email [email]", "ایمیل پیشفرض برای تمام مخازن"},
			{"git init", "ساخت مخزن محلی در پوشه فعلی"},
			{"git gc", "پاک کردن مخزن از فایل های ناخواسته و غیرضروری و فشرده کردن مخزن"},
			{"git gui", "باز کردن رابط گرافیکی گیت"},
			{"gitk", "نمایش تاریخچه مخزن به صورت گرافیکی"},
			{"git clone /path/to/repository", "کپی کردن مخزن از آدرس محلی"},
			{"git clone username@host:/path/to/repository", "کپی کردن مخزن از سرور ثانویه"},
			{"git clone http://github.com/username/repository", "کپی کردن مخزن از سایت گیت هاب"},
			{"git add <filename>", "اضافه کردن یک فایل جدید به مخزن"},
			{"git add *  ||  git add .", "اضافه کردن تمام فایل های جدید به مخزن"},
			{"git commit -m \"Commit message\"", "ثبت کردن تغییرات جدید همراه با پیام"},
			{"git commit -a", "ثبت کردن تمام تغییرات جدید"},
			{"git push origin master", "ارسال تغییرات به شاخه اصلی مخزن"},
			{"git push origin <branchname>", "ارسال تغییرات به یک شاخه خاص از مخزن"},
			{"git push --all origin", "ارسال تمام شاخه ها به مخزن اصلی"},
			{"git push origin :<branchname>", "حذف یک شاخه از مخزن اصلی سرور"},
			{"git push -f", "ارسال تغییرات بدون در نظر گرفتن ایرادات ( force )"},
			{"git pull", "دریافت و یکسان سازی تمام تغییرات از سرور اصلی"},
			{"git fetch origin", "دانلود تمام تغییرات از سرور"},
			{"git status", "لیست وضعیت مخزن شامل فایل های جدید ، تغییرات و غیره"},
			{"git status -s", "لیست وضعیت مخزن شامل فایل های جدید ، تغییرات و غیره به صورت خلاصه"},
			{"git remote add origin <server>", "اتصال مخزن محلی به مخزن اصلی در سرور"},
			{"git remote -v", "لیست تمام مخازن اصلی"},
			{"git checkout -b <branchname>", "ساخت شاخه جدید و منتقل شدن به آن"},
			{"git checkout <branchname>", "منتقل شدن به شاخه دیگر"},
			{"git checkout -- <filename>", "حذف تغییرات یک فایل ( برای مثال اگر یک فایل را به اشتباه تغییر دادید می توانید با این دستور آن را به آخرین نسخه ثبت شده در مخزن برگردانید )"},
			{"git branch", "لیست تمام شاخه های مخزن"},
			{"git branch -d <branchname>", "حذف شاخه"},
			{"git merge <branchname>", "یکسان سازی شاخه دیگر با شاخه فعلی"},
			{"git diff", "لیست تمام تضاد ها"},
			{"git tag 1.0.0 <commitID>", "ثبت یک نشان ( برای مثال نسخه یا نشانه های release/debug/beta/alpha و غیره )"},
			{"git push --tags origin", "ارسال تمام نشان ها به سرور اصلی"},
			{"git log", "مشاهده اطلاعات مخزن شامل لیست اخرین تغییرات"},
			{"git grep \"foo()\"", "جستجوی مخزن برای عبارت مورد نظر"},
			{"git rm <filename>", "حذف یک فایل از مخزن"},
			{"git reset --hard HEAD", "حذف تغییرات فعلی و بازگشت به آخرین نسخه"},
			{"git archive --format=zip master^ README >file.zip", "ساخت یک آرشیو از مخزن با توجه به شاخه مورد نظر"},
			{"touch .gitignore", "ایجاد کردن فایل gitignore. این دستور بیشتر در سیستم عامل ویندوز به کار برده می شود زیرا در ویندوز نمیتوان به صورت عادی فایل های بدون نام ایجاد کرد"},
	};
}
